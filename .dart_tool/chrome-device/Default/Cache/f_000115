define(['dart_sdk', 'packages/flutter_circular_text/circular_text/model.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/rendering/custom_paint.dart'], (function load__packages__flutter_circular_text__circular_text__widget_dart(dart_sdk, packages__flutter_circular_text__circular_text__model$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__rendering__custom_paint$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const model = packages__flutter_circular_text__circular_text__model$46dart.circular_text__model;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const text_painter = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_painter;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  var widget = Object.create(dart.library);
  var $split = dartx.split;
  var $add = dartx.add;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $truncate = dartx.truncate;
  var $modulo = dartx['%'];
  dart._checkModuleNullSafetyMode(false);
  var T = {
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    JSArrayOfTextPainter: () => (T.JSArrayOfTextPainter = dart.constFn(_interceptors.JSArray$(text_painter.TextPainter)))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: model.CircularTextPosition.prototype,
        [_name]: "CircularTextPosition.inside",
        index: 1
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 11,
        [_Location_line]: 35,
        [_Location_file]: null
      });
    },
    get C2() {
      return C[2] = dart.constList([C[3] || CT.C3], T._LocationL());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 34,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_circular_text-0.3.1/lib/circular_text/widget.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "size",
        [_Location_column]: 9,
        [_Location_line]: 33,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 34,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6, C[7] || CT.C7], T._LocationL());
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[5] || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 32,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_circular_text-0.3.1/lib/circular_text/widget.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 32,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.constList([C[10] || CT.C10], T._LocationL());
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[9] || CT.C9,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 31,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_circular_text-0.3.1/lib/circular_text/widget.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: model.StartAngleAlignment.prototype,
        [_name]: "StartAngleAlignment.start",
        index: 0
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: model.StartAngleAlignment.prototype,
        [_name]: "StartAngleAlignment.center",
        index: 1
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: model.StartAngleAlignment.prototype,
        [_name]: "StartAngleAlignment.end",
        index: 2
      });
    }
  }, false);
  var C = Array(14).fill(void 0);
  var I = [
    "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_circular_text-0.3.1/lib/circular_text/widget.dart",
    "package:flutter_circular_text/circular_text/widget.dart"
  ];
  var children$ = dart.privateName(widget, "CircularText.children");
  var radius$ = dart.privateName(widget, "CircularText.radius");
  var position$ = dart.privateName(widget, "CircularText.position");
  var backgroundPaint$ = dart.privateName(widget, "CircularText.backgroundPaint");
  var _name = dart.privateName(model, "_name");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  widget.CircularText = class CircularText extends framework.StatelessWidget {
    get children() {
      return this[children$];
    }
    set children(value) {
      super.children = value;
    }
    get radius() {
      return this[radius$];
    }
    set radius(value) {
      super.radius = value;
    }
    get position() {
      return this[position$];
    }
    set position(value) {
      super.position = value;
    }
    get backgroundPaint() {
      return this[backgroundPaint$];
    }
    set backgroundPaint(value) {
      super.backgroundPaint = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 30, 29, "context");
      return new basic.FittedBox.new({child: new basic.SizedBox.fromSize({size: new ui.Size.new(2 * dart.notNull(this.radius), 2 * dart.notNull(this.radius)), child: new basic.CustomPaint.new({painter: new widget._CircularTextPainter.new({children: this.children, position: this.position, backgroundPaint: this.backgroundPaint, textDirection: basic.Directionality.of(context)}), $creationLocationd_0dea112b090073317d4: C[1] || CT.C1}), $creationLocationd_0dea112b090073317d4: C[4] || CT.C4}), $creationLocationd_0dea112b090073317d4: C[8] || CT.C8});
    }
  };
  (widget.CircularText.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(I[0], 22, 19, "children");
    let radius = opts && 'radius' in opts ? opts.radius : 125;
    if (radius == null) dart.nullFailed(I[0], 23, 10, "radius");
    let position = opts && 'position' in opts ? opts.position : C[0] || CT.C0;
    if (position == null) dart.nullFailed(I[0], 24, 10, "position");
    let backgroundPaint = opts && 'backgroundPaint' in opts ? opts.backgroundPaint : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[children$] = children;
    this[radius$] = radius;
    this[position$] = position;
    this[backgroundPaint$] = backgroundPaint;
    if (!(dart.notNull(radius) >= 0)) dart.assertFailed(null, I[0], 26, 16, "radius >= 0");
    widget.CircularText.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = widget.CircularText.prototype;
  dart.addTypeTests(widget.CircularText);
  dart.addTypeCaches(widget.CircularText);
  dart.setMethodSignature(widget.CircularText, () => ({
    __proto__: dart.getMethods(widget.CircularText.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(widget.CircularText, I[1]);
  dart.setFieldSignature(widget.CircularText, () => ({
    __proto__: dart.getFields(widget.CircularText.__proto__),
    children: dart.finalFieldType(core.List$(model.TextItem)),
    radius: dart.finalFieldType(core.double),
    position: dart.finalFieldType(model.CircularTextPosition),
    backgroundPaint: dart.finalFieldType(dart.nullable(ui.Paint))
  }));
  var _radius = dart.privateName(widget, "_radius");
  var _paintTextClockwise = dart.privateName(widget, "_paintTextClockwise");
  var _paintTextAntiClockwise = dart.privateName(widget, "_paintTextAntiClockwise");
  var _calculateAngleShift = dart.privateName(widget, "_calculateAngleShift");
  widget._CircularTextPainter = class _CircularTextPainter extends custom_paint.CustomPainter {
    paint(canvas, size) {
      let t0;
      if (canvas == null) dart.nullFailed(I[0], 64, 21, "canvas");
      if (size == null) dart.nullFailed(I[0], 64, 34, "size");
      this[_radius] = math.min(core.double, dart.notNull(size.width) / 2, dart.notNull(size.height) / 2);
      canvas.translate(dart.notNull(size.width) / 2, dart.notNull(size.height) / 2);
      canvas.drawCircle(ui.Offset.zero, this[_radius], this.backgroundPaint);
      for (let textItem of this.children) {
        canvas.save();
        let _charPainters = T.JSArrayOfTextPainter().of([]);
        let text = textItem.text;
        for (let char of dart.nullCheck(text.data)[$split]("")) {
          _charPainters[$add]((t0 = new text_painter.TextPainter.new({text: new text_span.TextSpan.new({text: char, style: text.style}), textDirection: this.textDirection}), (() => {
            t0.layout();
            return t0;
          })()));
        }
        if (textItem.direction == model.CircularTextDirection.clockwise) {
          this[_paintTextClockwise](canvas, size, textItem, _charPainters);
        } else {
          this[_paintTextAntiClockwise](canvas, size, textItem, _charPainters);
        }
        canvas.restore();
      }
    }
    [_paintTextClockwise](canvas, size, textItem, _charPainters) {
      if (canvas == null) dart.nullFailed(I[0], 88, 35, "canvas");
      if (size == null) dart.nullFailed(I[0], 88, 48, "size");
      if (textItem == null) dart.nullFailed(I[0], 88, 63, "textItem");
      if (_charPainters == null) dart.nullFailed(I[0], 89, 25, "_charPainters");
      let hasStrokeStyle = this.backgroundPaint.style == ui.PaintingStyle.stroke && dart.notNull(this.backgroundPaint.strokeWidth) > 0.0;
      let angleShift = this[_calculateAngleShift](textItem, _charPainters[$length]);
      canvas.rotate((dart.notNull(textItem.startAngle) + 90 - dart.notNull(angleShift)) * 3.141592653589793 / 180);
      for (let i = 0; i < dart.notNull(_charPainters[$length]); i = i + 1) {
        let tp = _charPainters[$_get](i);
        let x = -dart.notNull(tp.width) / 2;
        let y = this.position == model.CircularTextPosition.outside ? -dart.notNull(this[_radius]) - dart.notNull(tp.height) - (hasStrokeStyle ? dart.notNull(this.backgroundPaint.strokeWidth) / 2 : 0.0) : -dart.notNull(this[_radius]) - (hasStrokeStyle ? dart.notNull(tp.height) / 2 : 0.0);
        tp.paint(canvas, new ui.Offset.new(x, y));
        canvas.rotate(dart.notNull(textItem.space) * 3.141592653589793 / 180);
      }
    }
    [_paintTextAntiClockwise](canvas, size, textItem, _charPainters) {
      if (canvas == null) dart.nullFailed(I[0], 108, 39, "canvas");
      if (size == null) dart.nullFailed(I[0], 108, 52, "size");
      if (textItem == null) dart.nullFailed(I[0], 108, 67, "textItem");
      if (_charPainters == null) dart.nullFailed(I[0], 109, 25, "_charPainters");
      let hasStrokeStyle = this.backgroundPaint.style == ui.PaintingStyle.stroke && dart.notNull(this.backgroundPaint.strokeWidth) > 0.0;
      let angleShift = this[_calculateAngleShift](textItem, _charPainters[$length]);
      canvas.rotate((dart.notNull(textItem.startAngle) - 90 + dart.notNull(angleShift)) * 3.141592653589793 / 180);
      for (let i = 0; i < dart.notNull(_charPainters[$length]); i = i + 1) {
        let tp = _charPainters[$_get](i);
        let x = -dart.notNull(tp.width) / 2;
        let y = this.position == model.CircularTextPosition.outside ? dart.notNull(this[_radius]) + (hasStrokeStyle ? dart.notNull(this.backgroundPaint.strokeWidth) / 2 : 0.0) : dart.notNull(this[_radius]) - dart.notNull(tp.height) + (hasStrokeStyle ? dart.notNull(tp.height) / 2 : 0.0);
        tp.paint(canvas, new ui.Offset.new(x, y));
        canvas.rotate(-dart.notNull(textItem.space) * 3.141592653589793 / 180);
      }
    }
    [_calculateAngleShift](textItem, textLength) {
      if (textItem == null) dart.nullFailed(I[0], 127, 40, "textItem");
      if (textLength == null) dart.nullFailed(I[0], 127, 54, "textLength");
      let angleShift = -1.0;
      switch (textItem.startAngleAlignment) {
        case C[11] || CT.C11:
        {
          angleShift = 0.0;
          break;
        }
        case C[12] || CT.C12:
        {
          let halfItemsLength = (dart.notNull(textLength) / 2)[$truncate]();
          if (textLength[$modulo](2) === 0) {
            angleShift = (halfItemsLength - 1) * dart.notNull(textItem.space) + dart.notNull(textItem.space) / 2;
          } else {
            angleShift = halfItemsLength * dart.notNull(textItem.space);
          }
          break;
        }
        case C[13] || CT.C13:
        {
          angleShift = (dart.notNull(textLength) - 1) * dart.notNull(textItem.space);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return angleShift;
    }
    shouldRepaint(oldDelegate) {
      widget._CircularTextPainter.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[0], 150, 43, "oldDelegate");
      const isTextItemsChanged = () => {
        let isChanged = false;
        for (let i = 0; i < dart.notNull(this.children[$length]); i = i + 1) {
          if (dart.test(this.children[$_get](i).isChanged(oldDelegate.children[$_get](i)))) {
            isChanged = true;
            break;
          }
        }
        return isChanged;
      };
      dart.fn(isTextItemsChanged, T.VoidTobool());
      const isBackgroundPaintChanged = () => {
        return !dart.equals(oldDelegate.backgroundPaint.color, this.backgroundPaint.color) || oldDelegate.backgroundPaint.style != this.backgroundPaint.style || oldDelegate.backgroundPaint.strokeWidth != this.backgroundPaint.strokeWidth;
      };
      dart.fn(isBackgroundPaintChanged, T.VoidTobool());
      return dart.test(isTextItemsChanged()) || oldDelegate.position != this.position || oldDelegate.textDirection != this.textDirection || dart.test(isBackgroundPaintChanged());
    }
  };
  (widget._CircularTextPainter.new = function(opts) {
    let t1, t0;
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(I[0], 56, 19, "children");
    let position = opts && 'position' in opts ? opts.position : C[0] || CT.C0;
    if (position == null) dart.nullFailed(I[0], 57, 10, "position");
    let backgroundPaint = opts && 'backgroundPaint' in opts ? opts.backgroundPaint : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[0], 59, 19, "textDirection");
    this[_radius] = 0.0;
    this.children = children;
    this.position = position;
    this.textDirection = textDirection;
    this.backgroundPaint = (t0 = backgroundPaint, t0 == null ? (t1 = ui.Paint.new(), (() => {
      t1.color = colors.Colors.transparent;
      return t1;
    })()) : t0);
    widget._CircularTextPainter.__proto__.new.call(this);
    ;
  }).prototype = widget._CircularTextPainter.prototype;
  dart.addTypeTests(widget._CircularTextPainter);
  dart.addTypeCaches(widget._CircularTextPainter);
  dart.setMethodSignature(widget._CircularTextPainter, () => ({
    __proto__: dart.getMethods(widget._CircularTextPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    [_paintTextClockwise]: dart.fnType(dart.void, [ui.Canvas, ui.Size, model.TextItem, core.List$(text_painter.TextPainter)]),
    [_paintTextAntiClockwise]: dart.fnType(dart.void, [ui.Canvas, ui.Size, model.TextItem, core.List$(text_painter.TextPainter)]),
    [_calculateAngleShift]: dart.fnType(core.double, [model.TextItem, core.int]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(widget._CircularTextPainter, I[1]);
  dart.setFieldSignature(widget._CircularTextPainter, () => ({
    __proto__: dart.getFields(widget._CircularTextPainter.__proto__),
    children: dart.finalFieldType(core.List$(model.TextItem)),
    position: dart.finalFieldType(model.CircularTextPosition),
    backgroundPaint: dart.finalFieldType(ui.Paint),
    textDirection: dart.finalFieldType(ui.TextDirection),
    [_radius]: dart.fieldType(core.double)
  }));
  dart.trackLibraries("packages/flutter_circular_text/circular_text/widget.dart", {
    "package:flutter_circular_text/circular_text/widget.dart": widget
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["widget.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../Z:/packages/flutter_circular_text/circular_text/widget.dart.lib.js"}');
  // Exports:
  return {
    circular_text__widget: widget
  };
}));

//# sourceMappingURL=widget.dart.lib.js.map
